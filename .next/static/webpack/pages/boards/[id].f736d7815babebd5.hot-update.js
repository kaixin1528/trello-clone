"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/boards/[id]",{

/***/ "./lib/const.ts":
/*!**********************!*\
  !*** ./lib/const.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"url\": function() { return /* binding */ url; },\n/* harmony export */   \"handleAddList\": function() { return /* binding */ handleAddList; },\n/* harmony export */   \"handleAddCard\": function() { return /* binding */ handleAddCard; },\n/* harmony export */   \"handleEditDescription\": function() { return /* binding */ handleEditDescription; },\n/* harmony export */   \"handleEditVisibility\": function() { return /* binding */ handleEditVisibility; },\n/* harmony export */   \"handleRename\": function() { return /* binding */ handleRename; },\n/* harmony export */   \"handleDeleteList\": function() { return /* binding */ handleDeleteList; },\n/* harmony export */   \"handleEditCardDescription\": function() { return /* binding */ handleEditCardDescription; },\n/* harmony export */   \"handleAddComment\": function() { return /* binding */ handleAddComment; },\n/* harmony export */   \"handleAddLabels\": function() { return /* binding */ handleAddLabels; }\n/* harmony export */ });\n/* harmony import */ var _Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/regenerator-runtime/runtime.js */ \"./node_modules/regenerator-runtime/runtime.js\");\n/* harmony import */ var _Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n        for(var i = 0, arr2 = new Array(arr.length); i < arr.length; i++){\n            arr2[i] = arr[i];\n        }\n        return arr2;\n    }\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n// import { connectToDatabase } from \"../lib/mongodb\";\n// import { ObjectId } from \"mongodb\";\nvar dev_url = \"http://localhost:3000\";\nvar prod_url = \"https://kaixin-trello-clone.vercel.app\";\nvar url =  true ? dev_url : 0;\nvar handleAddList = _asyncToGenerator(_Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(listTitle, id) {\n    return _Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n        while(1)switch(_ctx.prev = _ctx.next){\n            case 0:\n                console.log(\"http://localhost:3000/api/boards/\".concat(id));\n                _ctx.next = 3;\n                return fetch(\"/api/boards/\".concat(id), {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        title: listTitle\n                    })\n                });\n            case 3:\n            case \"end\":\n                return _ctx.stop();\n        }\n    }, _callee);\n// const { db } = await connectToDatabase();\n// await db\n//   .collection(\"boards\")\n//   .updateOne(\n//     { _id: new ObjectId(id) },\n//     { $push: { lists: { name: listTitle } } }\n//   );\n}));\nvar handleAddCard = _asyncToGenerator(_Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(title, cardTitle, id) {\n    return _Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n        while(1)switch(_ctx.prev = _ctx.next){\n            case 0:\n                _ctx.next = 2;\n                return fetch(\"http://localhost:3000/api/boards/\".concat(id, \"/lists/\").concat(title), {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        title: title,\n                        cardTitle: cardTitle\n                    })\n                });\n            case 2:\n            case \"end\":\n                return _ctx.stop();\n        }\n    }, _callee);\n// const { db } = await connectToDatabase();\n// await db\n//   .collection(\"boards\")\n//   .updateOne(\n//     { _id: new ObjectId(id), \"lists.name\": title },\n//     { $addToSet: { \"lists.$.cards\": { title: cardTitle } } }\n//   );\n}));\nvar handleEditDescription = _asyncToGenerator(_Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(e, id, description, setEditDescription, editDescription) {\n    return _Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n        while(1)switch(_ctx.prev = _ctx.next){\n            case 0:\n                e.preventDefault();\n                _ctx.next = 3;\n                return fetch(\"http://localhost:3000/api/boards/\".concat(id), {\n                    method: \"PUT\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        description: description\n                    })\n                });\n            case 3:\n                // const { db } = await connectToDatabase();\n                // await db.collection(\"boards\").updateOne(\n                //   { _id: new ObjectId(id) },\n                //   {\n                //     $set: {\n                //       menu: { madeBy: \"Kaixin Huang\", description: description },\n                //     },\n                //   }\n                // );\n                setEditDescription(!editDescription);\n            case 4:\n            case \"end\":\n                return _ctx.stop();\n        }\n    }, _callee);\n}));\nvar handleEditVisibility = _asyncToGenerator(_Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(value, id, setOpenVisibility, openVisibility) {\n    return _Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n        while(1)switch(_ctx.prev = _ctx.next){\n            case 0:\n                _ctx.next = 2;\n                return fetch(\"http://localhost:3000/api/boards/\".concat(id, \"/setting\"), {\n                    method: \"PUT\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        visibility: value\n                    })\n                });\n            case 2:\n                // const { db } = await connectToDatabase();\n                // console.log(value);\n                // await db.collection(\"boards\").updateOne(\n                //   { _id: new ObjectId(id) },\n                //   {\n                //     $set: {\n                //       visibility: value,\n                //     },\n                //   }\n                // );\n                setOpenVisibility(!openVisibility);\n            case 3:\n            case \"end\":\n                return _ctx.stop();\n        }\n    }, _callee);\n}));\nvar handleRename = _asyncToGenerator(_Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(title, id, listTitle) {\n    return _Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n        while(1)switch(_ctx.prev = _ctx.next){\n            case 0:\n                _ctx.next = 2;\n                return fetch(\"http://localhost:3000/api/boards/\".concat(id, \"/lists/\").concat(title), {\n                    method: \"PUT\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        title: title,\n                        newTitle: listTitle\n                    })\n                });\n            case 2:\n            case \"end\":\n                return _ctx.stop();\n        }\n    }, _callee);\n// const { db } = await connectToDatabase();\n// await db\n//   .collection(\"boards\")\n//   .updateOne(\n//     { _id: new ObjectId(id), \"lists.name\": title },\n//     { $set: { \"lists.$.name\": listTitle } }\n//   );\n}));\nvar handleDeleteList = _asyncToGenerator(_Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(title, id) {\n    return _Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n        while(1)switch(_ctx.prev = _ctx.next){\n            case 0:\n                _ctx.next = 2;\n                return fetch(\"http://localhost:3000/api/boards/\".concat(id, \"/lists/\").concat(title), {\n                    method: \"DELETE\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        title: title\n                    })\n                });\n            case 2:\n                // const { db } = await connectToDatabase();\n                // await db\n                //   .collection(\"boards\")\n                //   .updateOne(\n                //     { _id: new ObjectId(id) },\n                //     { $pull: { lists: { name: title } } }\n                //   );\n                window.location.reload();\n            case 3:\n            case \"end\":\n                return _ctx.stop();\n        }\n    }, _callee);\n}));\nvar handleEditCardDescription = _asyncToGenerator(_Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(e, listIndex, i, id, cardDescription, setEditDescription, editDescription) {\n    return _Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n        while(1)switch(_ctx.prev = _ctx.next){\n            case 0:\n                e.preventDefault();\n                _ctx.next = 3;\n                return fetch(\"http://localhost:3000/api/boards/\".concat(id, \"/lists/\").concat(listIndex, \"/cards/\").concat(i), {\n                    method: \"PUT\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        listIndex: listIndex,\n                        cardIndex: i,\n                        cardDescription: cardDescription\n                    })\n                });\n            case 3:\n                // const { db } = await connectToDatabase();\n                // await db.collection(\"boards\").updateOne(\n                //   { _id: new ObjectId(id) },\n                //   {\n                //     $set: {\n                //       [`lists.${listIndex}.cards.${i}.description`]: cardDescription,\n                //     },\n                //   }\n                // );\n                setEditDescription(!editDescription);\n            case 4:\n            case \"end\":\n                return _ctx.stop();\n        }\n    }, _callee);\n}));\nvar handleAddComment = _asyncToGenerator(_Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(e, listIndex, cardIndex, id, comment) {\n    return _Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n        while(1)switch(_ctx.prev = _ctx.next){\n            case 0:\n                _ctx.next = 2;\n                return fetch(\"http://localhost:3000/api/boards/\".concat(id, \"/lists/\").concat(listIndex, \"/cards/\").concat(cardIndex), {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        listIndex: listIndex,\n                        cardIndex: cardIndex,\n                        comment: comment\n                    })\n                });\n            case 2:\n            case \"end\":\n                return _ctx.stop();\n        }\n    }, _callee);\n// const { db } = await connectToDatabase();\n// await db.collection(\"boards\").updateOne(\n//   { _id: new ObjectId(id) },\n//   {\n//     $addToSet: {\n//       [`lists.${listIndex}.cards.${cardIndex}.comments`]: {\n//         name: \"Kaixin Huang\",\n//         description: comment,\n//       },\n//     },\n//   }\n// );\n}));\nvar handleAddLabels = _asyncToGenerator(_Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(currentLabels, label, listIndex, cardIndex, setLabels, labels, id) {\n    return _Users_kaihuang_Documents_GitHub_trello_clone_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n        while(1)switch(_ctx.prev = _ctx.next){\n            case 0:\n                if (!currentLabels || !currentLabels.includes(label)) setLabels(_toConsumableArray(labels).concat([\n                    label\n                ]));\n                _ctx.next = 3;\n                return fetch(\"http://localhost:3000/api/boards/\".concat(id, \"/lists/\").concat(listIndex, \"/cards/\").concat(cardIndex), {\n                    method: \"DELETE\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        listIndex: listIndex,\n                        cardIndex: cardIndex,\n                        label: label\n                    })\n                });\n            case 3:\n            case \"end\":\n                return _ctx.stop();\n        }\n    }, _callee);\n// const { db } = await connectToDatabase();\n// await db.collection(\"boards\").updateOne(\n//   { _id: new ObjectId(id) },\n//   {\n//     $addToSet: {\n//       [`lists.${listIndex}.cards.${cardIndex}.labels`]: label,\n//     },\n//   }\n// );\n}));\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/const.ts\n");

/***/ })

});